## Project Title: HTTP Client with REST API

### Author: VASILICÄ‚ Andrei

### Overview

	This project involves the implementation of a web client that uses a REST API
	to communicate with the server.

### Implementation Description

	The client is designed to run in an infinite loop, where it processes
	commands from the user. The get_command function identifies and handles each
	command, and the HTTP operations are performed using specific functions
	(compute_get_request, compute_post_request, compute_delete_request).

	JSON data manipulation is facilitated by the kgabis/parson library, which
	helps in both composing request messages and processing the responses
	received from the server.

### Workflow

	Reading data from the keyboard: The client requests the necessary
	information from the user.

	Initializing the connection: The connection is established by opening a TCP
	socket to the specified server.

	Creating requests: Three types of requests are implemented - GET, POST, and
	DELETE.

	Sending and receiving data: After sending the request, the client waits for
	and interprets the response from the server.

	Closing the connection: After processing the response, the connection with
	the server is closed.

	Error handling: Depending on the server's response, error or success
	messages are displayed.

	Data manipulation: Extracts important information from responses, such as
	cookies or JWT tokens, for future operations.
### Implemented Features

	register: Registers a new user in the system.

	login: Authenticates the user and obtains a session cookie.

	enter_library: Accesses the protected virtual library.

	get_book: Gets details about a specific book.

	get_books: Lists all books available to the user.

	add_book: Adds a new book to the personal library.

	delete_book: Deletes a book from the personal library.

	logout: Logs out the current user.

	exit: Exits the client application.
